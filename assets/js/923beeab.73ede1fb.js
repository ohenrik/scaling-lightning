"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1646],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>u});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=r,u=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(u,i(i({ref:n},g),{},{components:t})):a.createElement(u,i({ref:n},g))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9064:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:1},i="Change node image",l={unversionedId:"how-to/change-node-image",id:"how-to/change-node-image",title:"Change node image",description:"To change the image used for bitcoind, CLN or LND:",source:"@site/docs/how-to/change-node-image.md",sourceDirName:"how-to",slug:"/how-to/change-node-image",permalink:"/docs/how-to/change-node-image",draft:!1,editUrl:"https://github.com/scaling-lightning/scaling-lightning/tree/main/docs/docs/how-to/change-node-image.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"How to",permalink:"/docs/category/how-to"},next:{title:"Persist node data",permalink:"/docs/how-to/persist-data"}},c={},s=[{value:"Upgrade an existing node",id:"upgrade-an-existing-node",level:2}],g={toc:s},p="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"change-node-image"},"Change node image"),(0,r.kt)("p",null,"To change the image used for bitcoind, CLN or LND:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="bitcoind"',title:'"bitcoind"'},"values:\n  - image:\n      repository: ruimarinho/bitcoin-core\n      tag: 24\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="cln"',title:'"cln"'},"values:\n  - image:\n      repository: elementsproject/lightningd\n      tag: v23.05.1\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="lnd"',title:'"lnd"'},"values:\n  - image:\n      repository: lightninglabs/lnd\n      tag: v0.17.0-beta\n")),(0,r.kt)("p",null,"Full example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="network.yaml"',title:'"network.yaml"'},"repositories:\n  - name: scalinglightning\n    url: https://charts.scalinglightning.com\nreleases:\n  - name: bitcoind\n    namespace: sl\n    chart: scalinglightning/bitcoind\n    values:\n      - image:\n          repository: ruimarinho/bitcoin-core\n          tag: 24\n  - name: alice\n    namespace: sl\n    chart: scalinglightning/cln\n    values:\n      - image:\n          repository: elementsproject/lightningd\n          tag: v23.05.1\n  - name: bob\n    namespace: sl\n    chart: scalinglightning/lnd\n    values:\n      - image:\n          repository: lightninglabs/lnd\n          tag: v0.17.0-beta\n")),(0,r.kt)("h2",{id:"upgrade-an-existing-node"},"Upgrade an existing node"),(0,r.kt)("p",null,"To update an existing node to a new version you can call the CLI or Library command ",(0,r.kt)("inlineCode",{parentName:"p"},"create")," again with the same ",(0,r.kt)("inlineCode",{parentName:"p"},"network.yaml")," file but with the image value updated to the new value."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," When changing the image repository or tag, a new pod will be created and unless volume was specified in the configuration all data for that node will be lost.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," If changing bitcoind node to a new version without a volume all other lightning nodes will need to be destroyed and recreated as they will reference a blockchain that nolonger exists.")))}d.isMDXComponent=!0}}]);