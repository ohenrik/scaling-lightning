"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5835],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=i,d=m["".concat(s,".").concat(f)]||m[f]||u[f]||a;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8691:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={sidebar_position:7},o="Specify initial state",l={unversionedId:"initial-state",id:"initial-state",title:"Specify initial state",description:"To specify an initial state of the network a yaml file (or yaml string) can be passsed to the golang library.",source:"@site/docs/initial-state.md",sourceDirName:".",slug:"/initial-state",permalink:"/docs/initial-state",draft:!1,editUrl:"https://github.com/scaling-lightning/scaling-lightning/tree/main/docs/docs/initial-state.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Golang API",permalink:"/docs/api"},next:{title:"How to",permalink:"/docs/category/how-to"}},s={},c=[{value:"File format",id:"file-format",level:2},{value:"Use in code",id:"use-in-code",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"specify-initial-state"},"Specify initial state"),(0,i.kt)("p",null,"To specify an initial state of the network a yaml file (or yaml string) can be passsed to the golang library."),(0,i.kt)("h2",{id:"file-format"},"File format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="init.yaml"',title:'"init.yaml"'},"- SendOnChain:\n    - { from: bitcoind, to: alice, amountSats: 2_000_000 }\n- ConnectPeer:\n    - { from: alice, to: bob }\n- OpenChannels:\n    - { from: alice, to: bob, localAmountSats: 200_000 }\n    - { from: alice, to: bob, localAmountSats: 300_000 }\n- SendOverChannel:\n    - { from: alice, to: bob, amountMSat: 2_000_000 }\n- SendOnChain:\n    - { from: bitcoind, to: alice, amountSats: 5_000_000 }\n")),(0,i.kt)("p",null,"The file is read in top down proceedural fashion and command can be repeated (notice in this example SendOnChain is added twice)."),(0,i.kt)("h2",{id:"use-in-code"},"Use in code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "testing"\n\n    "github.com/stretchr/testify/assert"\n    "github.com/scaling-lightning/scaling-lightning/pkg/initialstate"\n    sl "github.com/scaling-lightning/scaling-lightning/pkg/network"\n)\n\n// will need a longish (few mins) timeout\nfunc TestMain2(t *testing.T) {\n    network := sl.NewSLNetwork("network.yaml", "", sl.Regtest)\n    err := network.CreateAndStart()\n    assert.NoError(t, err)\n\n    initialState, _ := initialstate.NewInitialStateFromFile("init.yaml", &network)\n    err = initialState.Apply()\n    assert.NoError(t, err)\n}\n')),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"NOTE:"))," This file format is currently only available with the go library and not the CLI.")))}u.isMDXComponent=!0}}]);