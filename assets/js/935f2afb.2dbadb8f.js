"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Project use cases","href":"/docs/project-use-cases","docId":"project-use-cases"},{"type":"link","label":"Getting started","href":"/docs/getting-started","docId":"getting-started"},{"type":"link","label":"Architectural overview","href":"/docs/architectural-overview","docId":"architectural-overview"},{"type":"link","label":"Configuration options","href":"/docs/configuration","docId":"configuration"},{"type":"link","label":"CLI","href":"/docs/cli","docId":"cli"},{"type":"link","label":"Golang API","href":"/docs/api","docId":"api"},{"type":"link","label":"Specify initial state","href":"/docs/initial-state","docId":"initial-state"},{"type":"category","label":"How to","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Change node image","href":"/docs/how-to/change-node-image","docId":"how-to/change-node-image"},{"type":"link","label":"Persist node data","href":"/docs/how-to/persist-data","docId":"how-to/persist-data"},{"type":"link","label":"Direct (g)RPC connection to nodes","href":"/docs/how-to/direct-grpc","docId":"how-to/direct-grpc"},{"type":"link","label":"Running in the cloud","href":"/docs/how-to/run-in-cloud","docId":"how-to/run-in-cloud"},{"type":"link","label":"Running on github actions","href":"/docs/how-to/run-on-github-actions","docId":"how-to/run-on-github-actions"}],"href":"/docs/category/how-to"}]},"docs":{"api":{"id":"api","title":"Golang API","description":"As an alternative to the CLI, a golang library is available with all the same functions. In the future we aim to release libraries for other programming languages. Please get in touch to request which language we should work on next.","sidebar":"docsSidebar"},"architectural-overview":{"id":"architectural-overview","title":"Architectural overview","description":"SL is Kubernetes based and takes advantage of the tooling surrounding the ecosystem. Notably, the definition for which nodes to run and their configuration options is done via helm. Helm charts currently exist for bitcoind, lnd and cln and can be found by version at https://charts.scalinglightning.com/. Helmfile can be configured to use the SL helm repository so there is no need to add it to your local helm installtion.","sidebar":"docsSidebar"},"cli":{"id":"cli","title":"CLI","description":"CLI is one option for creating and interacting with the network (the other being code via a library).","sidebar":"docsSidebar"},"configuration":{"id":"configuration","title":"Configuration options","description":"Configuration is provided via a helmfile.","sidebar":"docsSidebar"},"getting-started":{"id":"getting-started","title":"Getting started","description":"Prerequisites:","sidebar":"docsSidebar"},"how-to/change-node-image":{"id":"how-to/change-node-image","title":"Change node image","description":"To change the image used for bitcoind, CLN or LND:","sidebar":"docsSidebar"},"how-to/direct-grpc":{"id":"how-to/direct-grpc","title":"Direct (g)RPC connection to nodes","description":"One of the prerequisits for scaling lightning is to have traefik installed on the cluster to enable ingress into the cluster from outside. The command specified in the Getting Started references an values file where we specify 40 endpoints to use with nodes in the network. One of those endpoints is used for scaling lightning itself to talk to nodes from the cli or library. This leaves 39 endpoints which can be allocated to bitcoind or lightning nodes to gain direct external acccess to their (g)RPC services.","sidebar":"docsSidebar"},"how-to/persist-data":{"id":"how-to/persist-data","title":"Persist node data","description":"By default nodes in scaling lightning are ephemereal and will lost their data between network or node restarts and upgrades.","sidebar":"docsSidebar"},"how-to/run-in-cloud":{"id":"how-to/run-in-cloud","title":"Running in the cloud","description":"An advantage of running on kubernetes is that running in the cloud is as easy as running locally. Create a cluster in the cloud and download the cluster configuration file. If you make this your default configuration then nothing else special needs to be done. Scaling lightning cli and library will use the default cluster.","sidebar":"docsSidebar"},"how-to/run-on-github-actions":{"id":"how-to/run-on-github-actions","title":"Running on github actions","description":"As a scaling lightning network can be setup and interacted with from code it lends itself to being usable for end to end or functional tests running on Github actions (or CI/CD tool of choice).","sidebar":"docsSidebar"},"initial-state":{"id":"initial-state","title":"Specify initial state","description":"To specify an initial state of the network a yaml file (or yaml string) can be passsed to the golang library.","sidebar":"docsSidebar"},"project-use-cases":{"id":"project-use-cases","title":"Project use cases","description":"Scaling lightning will start a test network of lightning nodes using docker and kubernetes and can be used for:","sidebar":"docsSidebar"}}}')}}]);