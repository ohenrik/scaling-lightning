"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4730],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),d=i,m=c["".concat(l,".").concat(d)]||c[d]||h[d]||r;return n?a.createElement(m,s(s({ref:t},p),{},{components:n})):a.createElement(m,s({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[c]="string"==typeof e?e:i,s[1]=o;for(var u=2;u<r;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7987:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(7462),i=(n(7294),n(3905));const r={title:"Initial Project Roadmap",authors:["max"],tags:["roadmap"],draft:!1},s=void 0,o={permalink:"/blog/2023/08/26/roadmap",source:"@site/blog/2023-08-26-roadmap.md",title:"Initial Project Roadmap",description:"The motivation to establish Scaling Lightning has stemmed from the recognition that the testing of lightning networks poses considerable challenges, necessitating substantial development efforts. Various teams have found themselves devising their own individualised testing frameworks. Our aspiration is that the Scaling Lightning will become the standard choice for technical teams. This would liberate their resources, enabling them to concentrate on the core issue at hand rather than ever expanding efforts on constructing the testing infrastructure requisite for validating their solutions.",date:"2023-08-26T00:00:00.000Z",formattedDate:"August 26, 2023",tags:[{label:"roadmap",permalink:"/blog/tags/roadmap"}],readingTime:2.385,hasTruncateMarker:!0,authors:[{name:"Max Edwards",title:"Core Maintainer",url:"https://github.com/maxwedwards",imageURL:"https://avatars.githubusercontent.com/u/1204616",key:"max"}],frontMatter:{title:"Initial Project Roadmap",authors:["max"],tags:["roadmap"],draft:!1},prevItem:{title:"Combining SimLN with Scaling Lightning",permalink:"/blog/2023/09/11/running-sim-ln"},nextItem:{title:"Scaling Lightning runs in the cloud",permalink:"/blog/2023/08/09/running-in-the-cloud"}},l={authorsImageUrls:[void 0]},u=[{value:"Phase 0 - Initial Development",id:"phase-0---initial-development",level:2},{value:"Aims",id:"aims",level:3},{value:"Phase 1 - Application Testing",id:"phase-1---application-testing",level:2},{value:"Use Cases",id:"use-cases",level:3},{value:"Work",id:"work",level:3},{value:"Target Adopters",id:"target-adopters",level:3},{value:"Phase 2 - Lightning implementation testing",id:"phase-2---lightning-implementation-testing",level:2},{value:"Use Cases",id:"use-cases-1",level:3},{value:"Work",id:"work-1",level:3},{value:"Target Adopters",id:"target-adopters-1",level:3},{value:"Phase 3 - Alpha feature testing &amp; research",id:"phase-3---alpha-feature-testing--research",level:2},{value:"Use Cases",id:"use-cases-2",level:3},{value:"Work",id:"work-2",level:3},{value:"Example Target Adopters",id:"example-target-adopters",level:3},{value:"Risks",id:"risks",level:3},{value:"Phase 4 - Signets",id:"phase-4---signets",level:2},{value:"Use Cases",id:"use-cases-3",level:3},{value:"Target Adopters",id:"target-adopters-2",level:3}],p={toc:u},c="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The motivation to establish Scaling Lightning has stemmed from the recognition that the testing of lightning networks poses considerable challenges, necessitating substantial development efforts. Various teams have found themselves devising their own individualised testing frameworks. Our aspiration is that the Scaling Lightning will become the standard choice for technical teams. This would liberate their resources, enabling them to concentrate on the core issue at hand rather than ever expanding efforts on constructing the testing infrastructure requisite for validating their solutions."),(0,i.kt)("h2",{id:"phase-0---initial-development"},"Phase 0 - Initial Development"),(0,i.kt)("h3",{id:"aims"},"Aims"),(0,i.kt)("p",null,"Create the technical base from which expected future use cases can built upon\nWork"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Add CLN, LND, LDK and Eclair Node Types"),(0,i.kt)("li",{parentName:"ul"},"Build out minimum viable API across all four implementations"),(0,i.kt)("li",{parentName:"ul"},"Ensure functionality works in cloud environment as well as locally")),(0,i.kt)("h2",{id:"phase-1---application-testing"},"Phase 1 - Application Testing"),(0,i.kt)("h3",{id:"use-cases"},"Use Cases"),(0,i.kt)("p",null,"Local Development environment for any lightning application\nCI/CD Testing environment for any lightning application"),(0,i.kt)("h3",{id:"work"},"Work"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Write libraries in Go, Rust, Python, JVM, JavaScript, etc."),(0,i.kt)("li",{parentName:"ul"},"Define and implement a data structure for defining desired network state (channels, peers, invoices)"),(0,i.kt)("li",{parentName:"ul"},"Tool to achieve desired initial state"),(0,i.kt)("li",{parentName:"ul"},"Enable direct GRPC / API access to nodes"),(0,i.kt)("li",{parentName:"ul"},"Documentation")),(0,i.kt)("h3",{id:"target-adopters"},"Target Adopters"),(0,i.kt)("p",null,"Any node management tool, wallet, exchange, custodian, LSP\nFor example LN Capital to replace Torq\u2019s in-house test and dev environment"),(0,i.kt)("h2",{id:"phase-2---lightning-implementation-testing"},"Phase 2 - Lightning implementation testing"),(0,i.kt)("h3",{id:"use-cases-1"},"Use Cases"),(0,i.kt)("p",null,"Testing new lightning implementation releases and cross implementation compatibility with simulated network activity"),(0,i.kt)("h3",{id:"work-1"},"Work"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tool to simulate network activity using personas (busy exchange, pleb, routing node)"),(0,i.kt)("li",{parentName:"ul"},"Ability to aggregate stats or logs to compare test runs"),(0,i.kt)("li",{parentName:"ul"},"Documentation")),(0,i.kt)("h3",{id:"target-adopters-1"},"Target Adopters"),(0,i.kt)("p",null,"Blockstream with Core Lightning\nLightning Labs with LND\nSpiral with LDK\nACINQ with Eclair"),(0,i.kt)("h2",{id:"phase-3---alpha-feature-testing--research"},"Phase 3 - Alpha feature testing & research"),(0,i.kt)("h3",{id:"use-cases-2"},"Use Cases"),(0,i.kt)("p",null,"Alpha / Beta testing of specific features on lightning implementations"),(0,i.kt)("h3",{id:"work-2"},"Work"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Tool to simulate user defined network activity"),(0,i.kt)("li",{parentName:"ul"},"Allow components of the network to be swapped out for the new component under test")),(0,i.kt)("h3",{id:"example-target-adopters"},"Example Target Adopters"),(0,i.kt)("p",null,"Examples of efforts being tested at present that we would have liked to have been in a position to help support test:"),(0,i.kt)("p",null,"Channel Jamming - Carla Kirk-Cohen\nPickhardt Payments - Rene Pickhardt\nBolt 12 Prisms - farscapian"),(0,i.kt)("h3",{id:"risks"},"Risks"),(0,i.kt)("p",null,"Without knowing what future concepts and experiments the community will want to test on the lightning network we wouldn\u2019t know how much effort (if any) would be required to re-configure scaling lightning to support that use case."),(0,i.kt)("h2",{id:"phase-4---signets"},"Phase 4 - Signets"),(0,i.kt)("h3",{id:"use-cases-3"},"Use Cases"),(0,i.kt)("p",null,"Provide communities the ability to easily spin up and maintain public Signet networks for learning and experimentation\nWork\nPublicly accessible API to interact with the signet such as to request a node opens a channel with you or sends you certain traffic\nDocumentation"),(0,i.kt)("h3",{id:"target-adopters-2"},"Target Adopters"),(0,i.kt)("p",null,"Plebnet, Zebedee, ScalingLightningNet?"))}h.isMDXComponent=!0}}]);