"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3531],{3905:(n,e,t)=>{t.d(e,{Zo:()=>g,kt:()=>h});var a=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function r(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var o=a.createContext({}),s=function(n){var e=a.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):r(r({},e),n)),t},g=function(n){var e=s(n.components);return a.createElement(o.Provider,{value:e},n.children)},p="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,l=n.originalType,o=n.parentName,g=c(n,["components","mdxType","originalType","parentName"]),p=s(t),m=i,h=p["".concat(o,".").concat(m)]||p[m]||u[m]||l;return t?a.createElement(h,r(r({ref:e},g),{},{components:t})):a.createElement(h,r({ref:e},g))}));function h(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var l=t.length,r=new Array(l);r[0]=m;var c={};for(var o in e)hasOwnProperty.call(e,o)&&(c[o]=e[o]);c.originalType=n,c[p]="string"==typeof n?n:i,r[1]=c;for(var s=2;s<l;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},264:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var a=t(7462),i=(t(7294),t(3905));const l={title:"Combining SimLN with Scaling Lightning",authors:["max"],tags:["simln","activity-generation"],draft:!1},r=void 0,c={permalink:"/blog/2023/09/11/running-sim-ln",source:"@site/blog/2023-09-11-running-sim-ln.md",title:"Combining SimLN with Scaling Lightning",description:"SimLNd is a new tool to generate payment activity between lightning nodes. In this post I give a walkthough of running it against a Scaling Lightning cluster.",date:"2023-09-11T00:00:00.000Z",formattedDate:"September 11, 2023",tags:[{label:"simln",permalink:"/blog/tags/simln"},{label:"activity-generation",permalink:"/blog/tags/activity-generation"}],readingTime:1.75,hasTruncateMarker:!1,authors:[{name:"Max Edwards",title:"Core Maintainer",url:"https://github.com/maxwedwards",imageURL:"https://avatars.githubusercontent.com/u/1204616",key:"max"}],frontMatter:{title:"Combining SimLN with Scaling Lightning",authors:["max"],tags:["simln","activity-generation"],draft:!1},nextItem:{title:"Initial Project Roadmap",permalink:"/blog/2023/08/26/roadmap"}},o={authorsImageUrls:[void 0]},s=[{value:"Scaling Lightning setup",id:"scaling-lightning-setup",level:2},{value:"SimLN setup",id:"simln-setup",level:2}],g={toc:s},p="wrapper";function u(n){let{components:e,...t}=n;return(0,i.kt)(p,(0,a.Z)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"SimLNd is a new tool to generate payment activity between lightning nodes. In this post I give a walkthough of running it against a Scaling Lightning cluster."),(0,i.kt)("h2",{id:"scaling-lightning-setup"},"Scaling Lightning setup"),(0,i.kt)("p",null,"To start off let's create a local cluster with 2 nodes: Alice(CLN) and Bob(LND)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="network.yaml"',title:'"network.yaml"'},"repositories:\n  - name: scalinglightning\n    url: https://charts.scalinglightning.com\nreleases:\n  - name: bitcoind\n    namespace: sl\n    chart: scalinglightning/bitcoind\n  - name: alice\n    namespace: sl\n    chart: scalinglightning/cln\n    values:\n      - gRPCEntryPoint: endpoint1\n  - name: bob\n    namespace: sl\n    chart: scalinglightning/cln\n    values:\n      - gRPCEntryPoint: endpoint2\n")),(0,i.kt)("p",null,"Start the network. The scaling-lightning binary can be downloaded from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/scaling-lightning/scaling-lightning/releases"},"https://github.com/scaling-lightning/scaling-lightning/releases"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"scaling-lightning start -f network.yaml\n")),(0,i.kt)("p",null,"{eer up Alice and Carol and open a channel and send some initial funds that can be sent back and forth."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"scaling-lightning send -f bitcoind -t alice -a 1000000\nscaling-lightning connectpeer -f alice -t bob\nscaling-lightning openchannel -f alice -t bob -a 100000\nscaling-lightning createinvoice -n bob -a 50000\nscaling-lightning payinvoice -n alice -i <bolt11 invoice>\n")),(0,i.kt)("p",null,"Scaling Lightning cluster should be running with Alice and Bob having a channel between them."),(0,i.kt)("h2",{id:"simln-setup"},"SimLN setup"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/bitcoin-dev-project/sim-ln"},"SimLN")," also requires a config file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/bitcoin-dev-project/sim-ln\ncd sim-ln\n")),(0,i.kt)("p",null,"Then create config file for SimLN to give it the identity of nodes in the Scaling Lightning cluster."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="config.json"',title:'"config.json"'},'{\n  "nodes": [\n    {\n      "LND": {\n        "id": "0248efcfe94e3c451f4995b471ef0707163f279d4681af23727279c9c696004b42",\n        "address": "https://localhost:28103",\n        "macaroon": "/Users/max/source/sim-ln/auth/bob/admin.macaroon",\n        "cert": "/Users/max/source/sim-ln/auth/bob/tls.cert"\n      }\n    },\n    {\n      "CLN": {\n        "id": "0221b76f4cce7ab42538127022bac6245e999804ab5901813d9337d5cadd6428df",\n        "address": "https://localhost:28101",\n        "ca_cert": "/Users/max/source/sim-ln/auth/alice/ca.pem",\n        "client_cert": "/Users/max/source/sim-ln/auth/alice/client.pem",\n        "client_key": "/Users/max/source/sim-ln/auth/alice/client-key.pem"\n      }\n    }\n  ],\n  "activity": [\n    {\n      "source": "0248efcfe94e3c451f4995b471ef0707163f279d4681af23727279c9c696004b42",\n      "destination": "0221b76f4cce7ab42538127022bac6245e999804ab5901813d9337d5cadd6428de",\n      "interval_secs": 1,\n      "amount_msat": 2000\n    },\n    {\n      "source": "0221b76f4cce7ab42538127022bac6245e999804ab5901813d9337d5cadd6428de",\n      "destination": "0248efcfe94e3c451f4995b471ef0707163f279d4681af23727279c9c696004b42",\n      "interval_secs": 1,\n      "amount_msat": 2000\n    }\n  ]\n}\n')),(0,i.kt)("p",null,"To create your version of this config file you need three things: pubkey, address+port of GRPC api and auth files. Scaling Lightning has three commands for that."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"scaling-lightning writeauthfiles -o ~/source/sim-ln/auth --all\nscaling-lightning pubkey -n alice\nscaling-lightning pubkey -n bob\nscaling-lightning connectiondetails --all\n")),(0,i.kt)("p",null,"Finally to run SimLN"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"cargo install --path sim-cli/\nsim-cli --log-level debug --config config.json\n")),(0,i.kt)("p",null,"We will be following the development of SimLN closely. Scaling Lightning will need it's own activity generator and perhaps that could be SimLN?"))}u.isMDXComponent=!0}}]);