"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[216],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=u(t),g=o,f=d["".concat(c,".").concat(g)]||d[g]||p[g]||i;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=g;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a[d]="string"==typeof e?e:o,l[1]=a;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},8619:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>u});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:4},l="Running in the cloud",a={unversionedId:"how-to/run-in-cloud",id:"how-to/run-in-cloud",title:"Running in the cloud",description:"An advantage of running on kubernetes is that running in the cloud is as easy as running locally. Create a cluster in the cloud and download the cluster configuration file. If you make this your default configuration then nothing else special needs to be done. Scaling lightning cli and library will use the default cluster.",source:"@site/docs/how-to/run-in-cloud.md",sourceDirName:"how-to",slug:"/how-to/run-in-cloud",permalink:"/docs/how-to/run-in-cloud",draft:!1,editUrl:"https://github.com/scaling-lightning/scaling-lightning/tree/main/docs/docs/how-to/run-in-cloud.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Direct (g)RPC connection to nodes",permalink:"/docs/how-to/direct-grpc"},next:{title:"Running on github actions",permalink:"/docs/how-to/run-on-github-actions"}},c={},u=[],s={toc:u},d="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"running-in-the-cloud"},"Running in the cloud"),(0,o.kt)("p",null,"An advantage of running on kubernetes is that running in the cloud is as easy as running locally. Create a cluster in the cloud and download the cluster configuration file. If you make this your default configuration then nothing else special needs to be done. Scaling lightning cli and library will use the default cluster."),(0,o.kt)("p",null,"To see what would be the default config (and context) on your machine run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl config get-contexts\n")),(0,o.kt)("p",null,"To specify a specific kubernetes config file in cli:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"./scaling-lightning --kubeconfig ~/cloud-k8s.yml create -f network.yaml\n./scaling-lightning --kubeconfig ~/cloud-k8s.yml walletbalance -n bitcoind\n")),(0,o.kt)("p",null,"or in code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'network := sl.NewSLNetwork("network.yaml", "cloud-k8s.yml", sl.Regtest)\nerr := network.CreateAndStart()\nif err != nil {\n    log.Fatal().Err(err).Msg("Problem starting network")\n}\n')))}p.isMDXComponent=!0}}]);