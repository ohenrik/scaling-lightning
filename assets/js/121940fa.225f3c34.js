"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2781],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>h});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=i.createContext({}),s=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},g=function(e){var n=s(e.components);return i.createElement(o.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,g=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,h=p["".concat(o,".").concat(m)]||p[m]||u[m]||l;return t?i.createElement(h,r(r({ref:n},g),{},{components:t})):i.createElement(h,r({ref:n},g))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=m;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c[p]="string"==typeof e?e:a,r[1]=c;for(var s=2;s<l;s++)r[s]=t[s];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2300:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var i=t(7462),a=(t(7294),t(3905));const l={title:"Combining SimLN with Scaling Lightning",authors:["max"],tags:["simln","activity-generation"],draft:!1},r=void 0,c={permalink:"/blog/2023/09/11/running-sim-ln",source:"@site/blog/2023-09-11-running-sim-ln.md",title:"Combining SimLN with Scaling Lightning",description:"SimLN is a new tool to generate payment activity between lightning nodes. In this post I give a walkthough of running it against a Scaling Lightning cluster.",date:"2023-09-11T00:00:00.000Z",formattedDate:"September 11, 2023",tags:[{label:"simln",permalink:"/blog/tags/simln"},{label:"activity-generation",permalink:"/blog/tags/activity-generation"}],readingTime:1.91,hasTruncateMarker:!0,authors:[{name:"Max Edwards",title:"Core Maintainer",url:"https://github.com/maxwedwards",imageURL:"https://avatars.githubusercontent.com/u/1204616",key:"max"}],frontMatter:{title:"Combining SimLN with Scaling Lightning",authors:["max"],tags:["simln","activity-generation"],draft:!1},nextItem:{title:"Initial Project Roadmap",permalink:"/blog/2023/08/26/roadmap"}},o={authorsImageUrls:[void 0]},s=[{value:"Scaling Lightning setup",id:"scaling-lightning-setup",level:2},{value:"SimLN setup",id:"simln-setup",level:2}],g={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,i.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"SimLN is a new tool to generate payment activity between lightning nodes. In this post I give a walkthough of running it against a Scaling Lightning cluster."),(0,a.kt)("h2",{id:"scaling-lightning-setup"},"Scaling Lightning setup"),(0,a.kt)("p",null,"To start off let's create a local cluster with 2 nodes: Alice(CLN) and Bob(LND)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="network.yaml"',title:'"network.yaml"'},"repositories:\n  - name: scalinglightning\n    url: https://charts.scalinglightning.com\nreleases:\n  - name: bitcoind\n    namespace: sl\n    chart: scalinglightning/bitcoind\n  - name: alice\n    namespace: sl\n    chart: scalinglightning/cln\n    values:\n      - gRPCEntryPoint: endpoint1\n  - name: bob\n    namespace: sl\n    chart: scalinglightning/lnd\n    values:\n      - gRPCEntryPoint: endpoint2\n")),(0,a.kt)("p",null,"Start the network. The scaling-lightning binary can be downloaded from ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/scaling-lightning/scaling-lightning/releases"},"https://github.com/scaling-lightning/scaling-lightning/releases"),". Please read the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/scaling-lightning/scaling-lightning"},"README")," for prerequisites such as helm and installing traefik on your cluster."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"scaling-lightning start -f network.yaml\n")),(0,a.kt)("p",null,"{eer up Alice and Carol and open a channel and send some initial funds that can be sent back and forth."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"scaling-lightning send -f bitcoind -t alice -a 1000000\nscaling-lightning connectpeer -f alice -t bob\nscaling-lightning openchannel -f alice -t bob -a 100000\nscaling-lightning createinvoice -n bob -a 50000\nscaling-lightning payinvoice -n alice -i <bolt11 invoice>\n")),(0,a.kt)("p",null,"Scaling Lightning cluster should be running with Alice and Bob having a channel between them."),(0,a.kt)("h2",{id:"simln-setup"},"SimLN setup"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/bitcoin-dev-project/sim-ln"},"SimLN")," also requires a config file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/bitcoin-dev-project/sim-ln\ncd sim-ln\n")),(0,a.kt)("p",null,"Then create config file for SimLN to give it the identity of nodes in the Scaling Lightning cluster."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="config.json"',title:'"config.json"'},'{\n  "nodes": [\n    {\n      "LND": {\n        "id": "0248efcfe94e3c451f4995b471ef0707163f279d4681af23727279c9c696004b42",\n        "address": "https://localhost:28102",\n        "macaroon": "/Users/max/source/sim-ln/auth/bob/admin.macaroon",\n        "cert": "/Users/max/source/sim-ln/auth/bob/tls.cert"\n      }\n    },\n    {\n      "CLN": {\n        "id": "0221b76f4cce7ab42538127022bac6245e999804ab5901813d9337d5cadd6428df",\n        "address": "https://localhost:28101",\n        "ca_cert": "/Users/max/source/sim-ln/auth/alice/ca.pem",\n        "client_cert": "/Users/max/source/sim-ln/auth/alice/client.pem",\n        "client_key": "/Users/max/source/sim-ln/auth/alice/client-key.pem"\n      }\n    }\n  ],\n  "activity": [\n    {\n      "source": "0248efcfe94e3c451f4995b471ef0707163f279d4681af23727279c9c696004b42",\n      "destination": "0221b76f4cce7ab42538127022bac6245e999804ab5901813d9337d5cadd6428de",\n      "interval_secs": 1,\n      "amount_msat": 2000\n    },\n    {\n      "source": "0221b76f4cce7ab42538127022bac6245e999804ab5901813d9337d5cadd6428de",\n      "destination": "0248efcfe94e3c451f4995b471ef0707163f279d4681af23727279c9c696004b42",\n      "interval_secs": 1,\n      "amount_msat": 2000\n    }\n  ]\n}\n')),(0,a.kt)("p",null,"To create your version of this config file you need three things: pubkey, address+port of GRPC api and auth files. Scaling Lightning has three commands for that."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"scaling-lightning writeauthfiles -o ~/source/sim-ln/auth --all\nscaling-lightning pubkey -n alice\nscaling-lightning pubkey -n bob\nscaling-lightning connectiondetails --all\n")),(0,a.kt)("p",null,"Finally to run SimLN"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"cargo install --path sim-cli/\nsim-cli --log-level debug --config config.json\n")),(0,a.kt)("p",null,"We will be following the development of SimLN closely. Scaling Lightning will need it's own activity generator and perhaps that could be SimLN?"),(0,a.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/y0uwYV_Bx7w?si=8YaCKdx9UQhw0NQp",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0}))}u.isMDXComponent=!0}}]);