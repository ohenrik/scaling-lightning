"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9004],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(t),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||r;return t?i.createElement(f,o(o({ref:n},p),{},{components:t})):i.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<r;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9733:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=t(7462),a=(t(7294),t(3905));const r={sidebar_position:4},o="Configuration options",l={unversionedId:"configuration",id:"configuration",title:"Configuration options",description:"Configuration is provided via a helmfile.",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs/configuration",draft:!1,editUrl:"https://github.com/scaling-lightning/scaling-lightning/tree/main/docs/docs/configuration.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"Architectural overview",permalink:"/docs/architectural-overview"},next:{title:"CLI",permalink:"/docs/cli"}},s={},c=[{value:"Simplest possible helmfile",id:"simplest-possible-helmfile",level:2},{value:"More complex annotated helmfile example",id:"more-complex-annotated-helmfile-example",level:2}],p={toc:c},d="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(d,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration-options"},"Configuration options"),(0,a.kt)("p",null,"Configuration is provided via a ",(0,a.kt)("a",{parentName:"p",href:"https://helmfile.readthedocs.io/en/latest/"},"helmfile"),"."),(0,a.kt)("h2",{id:"simplest-possible-helmfile"},"Simplest possible helmfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="network.yaml"',title:'"network.yaml"'},"repositories:\n  - name: scalinglightning\n    url: https://charts.scalinglightning.com\nreleases:\n  - name: bitcoind\n    namespace: sl\n    chart: scalinglightning/bitcoind\n  - name: cln\n    namespace: sl\n    chart: scalinglightning/cln\n  - name: lnd\n    namespace: sl\n    chart: scalinglightning/lnd\n")),(0,a.kt)("h2",{id:"more-complex-annotated-helmfile-example"},"More complex annotated helmfile example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="network.yaml"',title:'"network.yaml"'},'repositories:\n  - name: scalinglightning\n    url: https://charts.scalinglightning.com\nreleases:\n  - name: bitcoind # bitcoind node must be called bitcoind and there must be one of these nodes\n    namespace: sl # Must be sl namespace\n    chart: scalinglightning/bitcoind # Using public helm chart repo added above\n    version: 7.7.7 # Specifies version of chart. Should be the same version as cli and library\n    values:\n      - clientImage:\n          tag: 7.7.7 # Specifies version of sidecar container. Should be the same as chart version and cli/library version\n      - volume: # Optional: if specified will create a volume and data will be persisted between restarts and upgrades\n          size: "1Gi" # Size of volume in kubernetes notation. Here 1 Gibibyte (1,073,741,824 bytes) is specified.\n      - autoGen: false # Optional, default value is true. Sets if auto mining is enabled which will mine a block every 10 seconds.\n      - rpcEntryPoint: endpoint37 # Allocate endpoint37 to bitcoind\'s rpc interface. Allocating an endpoint gives access to outside the cluster.\n      - zmqPubBlockEntryPoint: endpoint38 # Allocate endpoint38 to bitcoind\'s zmq block interface. Gives external access.\n      - zmqPubTxEntryPoint: endpoint39 # Allotcate endpoint39 to bitcoind\'s zmq tx interface. Gives external access.\n  - name: alice # Friendly name, can be anything. Used to refer to node with the cli and library\n    namespace: sl # Namespace has to be sl\n    chart: ../../charts/cln # Use a chart from the local filesystem (usually used when developing the scaling lightning project itself)\n    values:\n      - gRPCEntryPoint: endpoint1\n      - image:\n          tag: v23.05.1 # Version of CLN docker image to use\n      - clientImage:\n          repository: cln-client # Use a specific image for sidecar container (usually used when developing the scaling lightning project itself)\n          pullPolicy: IfNotPresent # K8s Pull Policy for sidecar image. IfNotPresent helps locate updated local images.\n      - volume: # Optional: if specified will create a volume and data will be persisted between restarts and upgrades\n          size: "1Gi" # Size of volume in kubernetes notation. Here 1 Gibibyte (1,073,741,824 bytes) is specified.\n  - name: bob # Friendly name, can be anything. Used to refer to node with the cli and library\n    namespace: sl # Namespace has to be sl\n    chart: scalinglightning/lnd # LND chart from public helm chart repo specified above\n    version: 7.7.7 # Version of chart. Match with version of cli / library\n    values:\n      - image:\n          tag: v0.17.0-beta.rc3 # Version of LND image to use\n      - clientImage:\n          tag: 7.7.7 # Version of sidecar container to use\n      - gRPCEntryPoint: endpoint2\n      - volume: # Optional: if specified will create a volume and data will be persisted between restarts and upgrades\n          size: "1Gi" # Size of volume in kubernetes notation. Here 1 Gibibyte (1,073,741,824 bytes) is specified.\n')))}m.isMDXComponent=!0}}]);